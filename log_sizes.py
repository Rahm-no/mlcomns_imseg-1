import os
import numpy as np
import matplotlib.pyplot as plt
import pathlib 
import json
from scipy.stats import norm


all_sizes = [116784768,29196288,86931328,21732928,104320128,26080128,89527328,22381928,110755968,27689088,179978368,44994688,117430784,29357792,81920128,20480128,205876928,51469328,68558528,17139728,53416576,13354240,90000128,22500128,113868928,28467328,58260656,14565260,143624352,35906184,50400128,12600128,85322776,21330790,97067996,24267095,101825012,25456349,193280128,48320128,153796928,38449328,62720128,15680128,85193028,21298353,88711328,22177928,84894468,21223713,63101568,15775488,262119164,65529887,130645028,32661353,156872864,39218312,168575204,42143897,49521280,12380416,42784844,10696307,130064448,32516208,125690528,31422728,173881920,43470576,206759432,51689954,141032128,35258128,193920128,48480128,56434816,14108800,101160128,25290128,103051520,25762976,42762880,10690816,100735040,25183856,126991776,31748040,213877568,53469488,51126400,12781696,206282880,51570816,236074828,59018803,208964288,52241168,112600132,28150129,51861728,12965528,86067328,21516928,139829888,34957568,74923328,18730928,224972928,56243328,177187628,44297003,124639364,31159937,73500128,18375128,210608228,52652153,103864448,25966208,136611228,34152903,88604800,22151296,185516160,46379136,87875264,21968912,59400128,14850128,77952768,19488288,187968640,46992256,75205128,18801378,70200128,17550128,95181572,23795489,69309056,17327360,68760128,17190128,82011264,20502912,242728400,60682196,76176128,19044128,101835652,25459009,68821432,17205454,99000128,24750128,136497328,34124428,117067628,29267003,104350528,26087728,198735180,49683891,106256064,26564112,121831552,30457984,236740736,59185280,129772272,32443164,139991168,34997888,53259428,13314953,25601168,6400388,102442124,25610627,60735800,15184046,103412864,25853312,110160128,27540128,147533248,36883408,48240128,12060128,186283232,46570904,84539828,21135053,105847488,26461968,51861664,12965512,118868640,29717256,144391700,36098021,69274368,17318688,100993360,25248436,103176380,25794191,157906064,39476612,165193728,41298528,150523520,37630976,97490328,24372678,86598524,21649727,32000128,8000128,64161920,16040576,115833088,28958368,56318912,14079824,47919064,11979862,90459128,22614878,46080128,11520128,44169968,11042588,66355328,16588928,111909128,27977378,119990128,29997628,89729928,22432578,83899904,20975072,59195264,14798912,165922928,41480828,147240128,36810128,221511808,55378048,214830264,53707662,135676032,33919104,179600912,44900324,59157728,14789528,27796096,6949120,96820328,24205178,61364352,15341184,152011168,38002888,83566720,20891776,100939736,25235030,106698188,26674643,67902208,16975648,48098936,12024830,149304932,37326329,85748024,21437102,66909312,16727424,81413228,20353403,175507516,43876975,139462860,34865811,111448192,27862144,66240128,16560128,150904960,37726336,76286080,19071616,83694528,20923728,65905088,16476368,157113128,39278378,48570496,12142720,41326052,10331609,93440128,23360128,79984928,19996328,213205120,53301376,90130124,22532627,79200128,19800128,95223424,23805952,36052352,9013184,101303904,25326072,64723828,16181053,197760128,49440128,95727628,23932003,313997600,78499496,71345280,17836416,177685184,44421392,112820528,28205228,130641968,32660588,298348672,74587264,171740864,42935312,120729664,30182512,149319740,37330031,50875664,12719012,129219384,32304942,220127360,55031936,90606028,22651603,149777228,37444403,123422144,30855632,102252672,25563264,107563028,26890853,185600128,46400128,65957656,16489510,233771264,58442912,222139356,55534935,174776824,43694302,72454272,18113664,76699328,19174928,182137472,45534464,114216384,28554192,108643456,27160960,184075868,46019063,65520128,16380128,172441728,43110528,129285128,32321378,162239060,40559861,167721536,41930480,163538048,40884608,75491264,18872912,102652096,25663120,66533528,16633478,175440172,43860139,113686796,28421795,77912368,19478188,128631368,32157938,128204336,32051180,180115796,45029045,158047576,39511990,141050936,35262830]
sizes_x = [116784768,86931328,104320128,89527328,110755968,179978368,117430784,81920128,205876928,68558528,53416576,90000128,113868928,58260656,143624352,50400128,85322776,97067996,101825012,193280128,153796928,62720128,85193028,88711328,84894468,63101568,262119164,130645028,156872864,168575204,49521280,42784844,130064448,125690528,173881920,206759432,141032128,193920128,56434816,101160128,103051520,42762880,100735040,126991776,213877568,51126400,206282880,236074828,208964288,112600132,51861728,86067328,139829888,74923328,224972928,177187628,124639364,73500128,210608228,103864448,136611228,88604800,185516160,87875264,59400128,77952768,187968640,75205128,70200128,95181572,69309056,68760128,82011264,242728400,76176128,101835652,68821432,99000128,136497328,117067628,104350528,198735180,106256064,121831552,236740736,129772272,139991168,53259428,25601168,102442124,60735800,103412864,110160128,147533248,48240128,186283232,84539828,105847488,51861664,118868640,144391700,69274368,100993360,103176380,157906064,165193728,150523520,97490328,86598524,32000128,64161920,115833088,56318912,47919064,90459128,46080128,44169968,66355328,111909128,119990128,89729928,83899904,59195264,165922928,147240128,221511808,214830264,135676032,179600912,59157728,27796096,96820328,61364352,152011168,83566720,100939736,106698188,67902208,48098936,149304932,85748024,66909312,81413228,175507516,139462860,111448192,66240128,150904960,76286080,83694528,65905088,157113128,48570496,41326052,93440128,79984928,213205120,90130124,79200128,95223424,36052352,101303904,64723828,197760128,95727628,313997600,71345280,177685184,112820528,130641968,298348672,171740864,120729664,149319740,50875664,129219384,220127360,90606028,149777228,123422144,102252672,107563028,185600128,65957656,233771264,222139356,174776824,72454272,76699328,182137472,114216384,108643456,184075868,65520128,172441728,129285128,162239060,167721536,163538048,75491264,102652096,66533528,175440172,113686796,77912368,128631368,128204336,180115796,158047576,141050936]
sizes_y = [29196288,21732928,26080128,22381928,27689088,44994688,29357792,20480128,51469328,17139728,13354240,22500128,28467328,14565260,35906184,12600128,21330790,24267095,25456349,48320128,38449328,15680128,21298353,22177928,21223713,15775488,65529887,32661353,39218312,42143897,12380416,10696307,32516208,31422728,43470576,51689954,35258128,48480128,14108800,25290128,25762976,10690816,25183856,31748040,53469488,12781696,51570816,59018803,52241168,28150129,12965528,21516928,34957568,18730928,56243328,44297003,31159937,18375128,52652153,25966208,34152903,22151296,46379136,21968912,14850128,19488288,46992256,18801378,17550128,23795489,17327360,17190128,20502912,60682196,19044128,25459009,17205454,24750128,34124428,29267003,26087728,49683891,26564112,30457984,59185280,32443164,34997888,13314953,6400388,25610627,15184046,25853312,27540128,36883408,12060128,46570904,21135053,26461968,12965512,29717256,36098021,17318688,25248436,25794191,39476612,41298528,37630976,24372678,21649727,8000128,16040576,28958368,14079824,11979862,22614878,11520128,11042588,16588928,27977378,29997628,22432578,20975072,14798912,41480828,36810128,55378048,53707662,33919104,44900324,14789528,6949120,24205178,15341184,38002888,20891776,25235030,26674643,16975648,12024830,37326329,21437102,16727424,20353403,43876975,34865811,27862144,16560128,37726336,19071616,20923728,16476368,39278378,12142720,10331609,23360128,19996328,53301376,22532627,19800128,23805952,9013184,25326072,16181053,49440128,23932003,78499496,17836416,44421392,28205228,32660588,74587264,42935312,30182512,37330031,12719012,32304942,55031936,22651603,37444403,30855632,25563264,26890853,46400128,16489510,58442912,55534935,43694302,18113664,19174928,45534464,28554192,27160960,46019063,16380128,43110528,32321378,40559861,41930480,40884608,18872912,25663120,16633478,43860139,28421795,19478188,32157938,32051180,45029045,39511990,35262830]

fig, axs = plt.subplots(ncols=3, nrows=1, constrained_layout=True, figsize=(7,7))
fig.suptitle("UNET3D Dataset Size distribution (B)")



ax = axs[0]
ax.hist(all_sizes, bins=100, density=True)

mu, std = norm.fit(all_sizes)

xmin, xmax = ax.get_xlim()
x = np.linspace(xmin, xmax, len(all_sizes))

p = norm.pdf(x, mu, std)
ax.plot(x, p, 'k', linewidth=1)
ax.set_title("X and Y", fontsize=12)

trans = ax.get_xaxis_transform()
ax.axvline(mu, color='k', linestyle='dashed', linewidth=1)
ax.text(mu + 10, .85, f'mean: {mu:.2f}\nstd: {std:.2f}', transform=trans, fontsize=10)


ax = axs[1]
ax.hist(sizes_x, bins=100, density=True)

# mean1 = np.mean(dim1)
# std1 = np.std(dim1)
# median1 = np.median(dim1)

mu, std = norm.fit(sizes_x)

xmin, xmax = ax.get_xlim()
x = np.linspace(xmin, xmax, len(sizes_x))

p = norm.pdf(x, mu, std)
ax.plot(x, p, 'k', linewidth=1)
ax.set_title("X", fontsize=12)

trans = ax.get_xaxis_transform()
ax.axvline(mu, color='k', linestyle='dashed', linewidth=1)
ax.text(mu + 10, .85, f'mean: {mu:.2f}\nstd: {std:.2f}', transform=trans, fontsize=10)

ax = axs[2]
ax.hist(sizes_y, bins=100, density=True)

# mean1 = np.mean(dim1)
# std1 = np.std(dim1)
# median1 = np.median(dim1)

mu, std = norm.fit(sizes_y)

xmin, xmax = ax.get_xlim()
x = np.linspace(xmin, xmax, len(sizes_y))

p = norm.pdf(x, mu, std)
ax.plot(x, p, 'k', linewidth=1)
ax.set_title("Y", fontsize=12)

trans = ax.get_xaxis_transform()
ax.axvline(mu, color='k', linestyle='dashed', linewidth=1)
ax.text(mu + 10, .85, f'mean: {mu:.2f}\nstd: {std:.2f}', transform=trans, fontsize=10)

filename = 'unet3d_dataset_sizes_2.png'
figure_filename = os.path.join("notes/", filename)

plt.savefig(figure_filename, format="png", dpi=250)
# Clear the current axes.
plt.cla() 
# Closes all the figure windows.
plt.close('all')   
plt.close(fig)

exit()



if not os.path.isfile("notes/dataset_size_distrib.json"):

    all_cases = os.listdir("/raid/data/imseg/29gb-gen")
    all_cases.sort()

    # Each have (1, dim1, dim2, dim2)

    dim1 = []
    dim2 = []

    for file in all_cases:
        case = np.load(f'/raid/data/imseg/29gb-npy/{file}')

        dim1.append(case.shape[1])
        dim2.append(case.shape[2])

        print(f'{file}: {case.shape} {case.dtype}')

    dim1 = sorted(dim1)
    dim2 = sorted(dim2)

    with open("notes/dataset_size_distrib.json", 'w') as outfile:
        json.dump({'dim1': dim1, 'dim2': dim2}, outfile)



with open("notes/dataset_size_distrib.json", 'r') as infile:
    data = json.load(infile)   
    dim1 = np.asarray(data['dim1'])
    dim2 = np.asarray(data['dim2'])

print(f'DIM1 - mean {dim1.mean()} std {dim1.std()} min {dim1.min()} max {dim1.max()}')
print(f'DIM2 - mean {dim2.mean()} std {dim2.std()} min {dim2.min()} max {dim2.max()}')

# exit()

N_BINS = 50

fig, (ax1, ax2) = plt.subplots(ncols=2, nrows=1, constrained_layout=True, figsize=(7,4))
fig.suptitle("UNET3D Dataset Size Distribution (n=210)\nShape: (1, dim1, dim2, dim2)")


ax1.hist(dim1, bins=N_BINS, density=True)

# mean1 = np.mean(dim1)
# std1 = np.std(dim1)
# median1 = np.median(dim1)

mu, std = norm.fit(dim1)

xmin, xmax = ax1.get_xlim()
x = np.linspace(xmin, xmax, len(dim1))

p = norm.pdf(x, mu, std)
ax1.plot(x, p, 'k', linewidth=1)
ax1.set_title("dim1", fontsize=12)

trans = ax1.get_xaxis_transform()
ax1.axvline(mu, color='k', linestyle='dashed', linewidth=1)
ax1.text(mu + 10, .85, f'mean: {mu:.2f}\nstd: {std:.2f}', transform=trans, fontsize=10)


# Second plot
ax2.hist(dim2, bins=N_BINS, density=True)

ax2.set_title("dim2")

xmin, xmax = ax2.get_xlim()
x = np.linspace(xmin, xmax, len(dim2))

mu, std = norm.fit(dim2)
p = norm.pdf(x, mu, std)
ax2.plot(x, p, 'k', linewidth=1)

trans = ax2.get_xaxis_transform()
ax2.axvline(mu, color='k', linestyle='dashed', linewidth=1)
ax2.text(mu + 10, .85, f'mean: {mu:.2f}\nstd: {std:.2f}', transform=trans)




filename = 'unet3d_dataset_distribution_2.png'
figure_filename = os.path.join("notes/", filename)

plt.savefig(figure_filename, format="png", dpi=250)
# Clear the current axes.
plt.cla() 
# Closes all the figure windows.
plt.close('all')   
plt.close(fig)
